version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=5005
      # Add CORS-related environment variables
      - CORS_ALLOWED_ORIGINS=https://bookzify.xyz,https://www.bookzify.xyz,https://api.bookzify.xyz
    networks:
      - coolify
      - supabase
    expose:
      - "5005"  # Only expose to other containers, not to host
    labels:
      # Caddy Docker Proxy labels for subdomain
      - "caddy=api.bookzify.xyz"
      - "caddy.reverse_proxy=http://10.0.1.2:5005"  # Use the container's IP directly
      - "caddy.reverse_proxy.health_uri=/health"
      - "caddy.reverse_proxy.health_interval=5s"
      - "caddy.reverse_proxy.health_timeout=2s"
      - "caddy.tls.dns=cloudflare"
      # CORS headers with proper format
      - "caddy.header.Access-Control-Allow-Origin={http.request.header.Origin}"
      - "caddy.header.Access-Control-Allow-Methods=GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH"
      - "caddy.header.Access-Control-Allow-Headers=Content-Type, Authorization, X-Requested-With, Accept, Origin"
      - "caddy.header.Access-Control-Allow-Credentials=true"
      - "caddy.header.Access-Control-Max-Age=3600"
      - "caddy.header.Vary=Origin"
      # Additional debug headers
      - "caddy.header.X-Debug-Container=api-u8s8oswsw84cscwggwgkokk8-234555501149"
      - "caddy.header.X-Debug-Network=coolify"
      # Coolify management labels
      - "coolify.managed=true"
    container_name: api-u8s8oswsw84cscwggwgkokk8-234555501149  # Match the actual container name
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  coolify:
    external: true
  supabase:
    external:
      name: g00sk4cwgwk0cwkc8kcgc8gk 